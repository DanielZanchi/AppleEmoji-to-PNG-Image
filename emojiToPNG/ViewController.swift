//
//  ViewController.swift
//  emojiToPNG
//
//  Created by Daniel Zanchi on 07/08/16.
//  Copyright © 2016 Daniel Zanchi. All rights reserved.
//

import Cocoa
import Foundation


class ViewController: NSViewController {
    
    var emojisString = ["😀", "😬", "😁", "😂", "😃", "😄", "😅", "😆", "😇", "😉", "😊", "🙂", "🙃", "☺️", "😋", "😌", "😍", "😘", "😗", "😙", "😚", "😜", "😝", "😛", "🤑", "🤓", "😎", "🤗", "😏", "😶", "😐", "😑", "😒", "🙄", "🤔", "😳", "😞", "😟", "😠", "😡", "😔", "😕", "🙁", "☹️", "😣", "😖", "😫", "😩", "😤", "😮", "😱", "😨", "😰", "😯", "😦", "😧", "😢", "😥", "😪", "😓", "😭", "😵", "😲", "🤐", "😷", "🤒", "🤕", "😴", "💤", "💩", "😈", "👿", "👹", "👺", "💀", "👻", "👽", "🤖", "😺", "😸", "😹", "😻", "😼", "😽", "🙀", "😿", "😾", "🙌", "👏", "👋", "👍", "👊", "✊", "✌️", "👌", "✋", "💪", "🙏", "☝️", "👆", "👇", "👈", "👉", "🖕", "🤘", "🖖", "✍️", "💅", "👄", "👅", "👂", "👃", "👁", "👀", "👤", "🗣", "👶", "👦", "👧", "👨", "👩", "👱", "👴", "👵", "👲", "👳", "👮", "👷", "💂", "🕵", "🎅", "👼", "👸", "👰", "🚶", "🏃", "💃", "👯", "👫", "👬", "👭", "🙇", "💁", "🙅", "🙆", "🙋", "🙎", "🙍", "💇", "💆", "💑", "👩‍❤️‍👩", "👨‍❤️‍👨", "💏", "👩‍❤️‍💋‍👩", "👨‍❤️‍💋‍👨", "👪", "👨‍👩‍👧", "👨‍👩‍👧‍👦", "👨‍👩‍👦‍👦", "👨‍👩‍👧‍👧", "👩‍👩‍👦", "👩‍👩‍👧", "👩‍👩‍👧‍👦", "👩‍👩‍👦‍👦", "👩‍👩‍👧‍👧", "👨‍👨‍👦", "👨‍👨‍👧", "👨‍👨‍👧‍👦", "👨‍👨‍👦‍👦", "👨‍👨‍👧‍👧", "👚", "👕", "👖", "👔", "👗", "👙", "👘", "💄", "💋", "👣", "👠", "👡", "👢", "👞", "👟", "👒", "🎩", "⛑", "🎓", "👑", "🎒", "👝", "👛", "👜", "💼", "👓", "🕶", "💍", "🌂", "👦🏻", "👧🏻", "👨🏻", "👩🏻", "👴🏻", "👵🏻", "👶🏻", "👱🏻", "👮🏻", "👲🏻", "👳🏻", "👷🏻", "👸🏻", "💂🏻", "🎅🏻", "👼🏻", "💆🏻", "💇🏻", "👰🏻", "🙍🏻", "🙎🏻", "🙅🏻", "🙆🏻", "💁🏻", "🙋🏻", "🙇🏻", "🙌🏻", "🙏🏻", "🚶🏻", "🏃🏻", "💃🏻", "💪🏻", "👈🏻", "👉🏻", "☝️🏻", "👆🏻", "🖕🏻", "👇🏻", "✌️🏻", "🖖🏻", "🤘🏻", "🖐🏻", "✊🏻", "✋🏻", "👊🏻", "👌🏻", "👍🏻", "👎🏻", "👋🏻", "👏🏻", "👐🏻", "✍🏻", "💅🏻", "👂🏻", "👃🏻", "🚣🏻", "🛀🏻", "🏄🏻", "🏇🏻", "🏊🏻", "⛹🏻", "🏋🏻", "🚴🏻", "🚵🏻", "👦🏼", "👧🏼", "👨🏼", "👩🏼", "👴🏼", "👵🏼", "👶🏼", "👱🏼", "👮🏼", "👲🏼", "👳🏼", "👷🏼", "👸🏼", "💂🏼", "🎅🏼", "👼🏼", "💆🏼", "💇🏼", "👰🏼", "🙍🏼", "🙎🏼", "🙅🏼", "🙆🏼", "💁🏼", "🙋🏼", "🙇🏼", "🙌🏼", "🙏🏼", "🚶🏼", "🏃🏼", "💃🏼", "💪🏼", "👈🏼", "👉🏼", "☝️🏼", "👆🏼", "🖕🏼", "👇🏼", "✌️🏼", "🖖🏼", "🤘🏼", "🖐🏼", "✊🏼", "✋🏼", "👊🏼", "👌🏼", "👍🏼", "👎🏼", "👋🏼", "👏🏼", "👐🏼", "✍🏼", "💅🏼", "👂🏼", "👃🏼", "🚣🏼", "🛀🏼", "🏄🏼", "🏇🏼", "🏊🏼", "⛹🏼", "🏋🏼", "🚴🏼", "🚵🏼", "👦🏽", "👧🏽", "👨🏽", "👩🏽", "👴🏽", "👵🏽", "👶🏽", "👱🏽", "👮🏽", "👲🏽", "👳🏽", "👷🏽", "👸🏽", "💂🏽", "🎅🏽", "👼🏽", "💆🏽", "💇🏽", "👰🏽", "🙍🏽", "🙎🏽", "🙅🏽", "🙆🏽", "💁🏽", "🙋🏽", "🙇🏽", "🙌🏽", "🙏🏽", "🚶🏽", "🏃🏽", "💃🏽", "💪🏽", "👈🏽", "👉🏽", "☝️🏽", "👆🏽", "🖕🏽", "👇🏽", "✌️🏽", "🖖🏽", "🤘🏽", "🖐🏽", "✊🏽", "✋🏽", "👊🏽", "👌🏽", "👍🏽", "👎🏽", "👋🏽", "👏🏽", "👐🏽", "✍🏽", "💅🏽", "👂🏽", "👃🏽", "🚣🏽", "🛀🏽", "🏄🏽", "🏇🏽", "🏊🏽", "⛹🏽", "🏋🏽", "🚴🏽", "🚵🏽", "👦🏾", "👧🏾", "👨🏾", "👩🏾", "👴🏾", "👵🏾", "👶🏾", "👱🏾", "👮🏾", "👲🏾", "👳🏾", "👷🏾", "👸🏾", "💂🏾", "🎅🏾", "👼🏾", "💆🏾", "💇🏾", "👰🏾", "🙍🏾", "🙎🏾", "🙅🏾", "🙆🏾", "💁🏾", "🙋🏾", "🙇🏾", "🙌🏾", "🙏🏾", "🚶🏾", "🏃🏾", "💃🏾", "💪🏾", "👈🏾", "👉🏾", "☝️🏾", "👆🏾", "🖕🏾", "👇🏾", "✌️🏾", "🖖🏾", "🤘🏾", "🖐🏾", "✊🏾", "✋🏾", "👊🏾", "👌🏾", "👍🏾", "👎🏾", "👋🏾", "👏🏾", "👐🏾", "✍🏾", "💅🏾", "👂🏾", "👃🏾", "🚣🏾", "🛀🏾", "🏄🏾", "🏇🏾", "🏊🏾", "⛹🏾", "🏋🏾", "🚴🏾", "🚵🏾", "👦🏿", "👧🏿", "👨🏿", "👩🏿", "👴🏿", "👵🏿", "👶🏿", "👱🏿", "👮🏿", "👲🏿", "👳🏿", "👷🏿", "👸🏿", "💂🏿", "🎅🏿", "👼🏿", "💆🏿", "💇🏿", "👰🏿", "🙍🏿", "🙎🏿", "🙅🏿", "🙆🏿", "💁🏿", "🙋🏿", "🙇🏿", "🙌🏿", "🙏🏿", "🚶🏿", "🏃🏿", "💃🏿", "💪🏿", "👈🏿", "👉🏿", "☝️🏿", "👆🏿", "🖕🏿", "👇🏿", "✌️🏿", "🖖🏿", "🤘🏿", "🖐🏿", "✊🏿", "✋🏿", "👊🏿", "👌🏿", "👍🏿", "👎🏿", "👋🏿", "👏🏿", "👐🏿", "✍🏿", "💅🏿", "👂🏿", "👃🏿", "🚣🏿", "🛀🏿", "🏄🏿", "🏇🏿", "🏊🏿", "⛹🏿", "🏋🏿", "🚴🏿", "🚵🏿", "🐶", "🐱", "🐭", "🐹", "🐰", "🐻", "🐼", "🐨", "🐯", "🦁", "🐮", "🐷", "🐽", "🐸", "🐙", "🐵", "🙈", "🙉", "🙊", "🐒", "🐔", "🐧", "🐦", "🐤", "🐣", "🐥", "🐺", "🐗", "🐴", "🦄", "🐝", "🐛", "🐌", "🐞", "🐜", "🕷", "🦂", "🦀", "🐍", "🐢", "🐠", "🐟", "🐡", "🐬", "🐳", "🐋", "🐊", "🐆", "🐅", "🐃", "🐂", "🐄", "🐪", "🐫", "🐘", "🐐", "🐏", "🐑", "🐎", "🐖", "🐀", "🐁", "🐓", "🦃", "🕊", "🐕", "🐩", "🐈", "🐇", "🐿", "🐾", "🐉", "🐲", "🌵", "🎄", "🌲", "🌳", "🌴", "🌱", "🌿", "☘", "🍀", "🎍", "🎋", "🍃", "🍂", "🍁", "🌾", "🌺", "🌻", "🌹", "🌷", "🌼", "🌸", "💐", "🍄", "🌰", "🎃", "🐚", "🕸", "🌎", "🌍", "🌏", "🌕", "🌖", "🌗", "🌘", "🌑", "🌒", "🌓", "🌔", "🌚", "🌝", "🌛", "🌜", "🌞", "🌙", "⭐️", "🌟", "💫", "✨", "☄", "☀️", "🌤", "⛅️", "🌥", "🌦", "☁️", "🌧", "⛈", "🌩", "⚡️", "🔥", "💥", "❄️", "🌨", "🔥", "💥", "❄️", "🌨", "☃️", "⛄️", "🌬", "💨", "🌪", "🌫", "☂️", "☔️", "💧", "💦", "🌊", "🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇", "🍓", "🍈", "🍒", "🍑", "🍍", "🍅", "🍆", "🌶", "🌽", "🍠", "🍯", "🍞", "🧀", "🍗", "🍖", "🍤", "🍳", "🍔", "🍟", "🌭", "🍕", "🍝", "🌮", "🌯", "🍜", "🍲", "🍥", "🍣", "🍱", "🍛", "🍙", "🍚", "🍘", "🍢", "🍡", "🍧", "🍨", "🍦", "🍰", "🎂", "🍮", "🍬", "🍭", "🍫", "🍿", "🍩", "🍪", "🍺", "🍻", "🍷", "🍸", "🍹", "🍾", "🍶", "🍵", "☕️", "🍼", "🍴", "🍽", "⚽️", "🏀", "🏈", "⚾️", "🎾", "🏐", "🏉", "🎱", "⛳️", "🏌", "🏓", "🏸", "🏒", "🏑", "🏏", "🎿", "⛷", "🏂", "⛸", "🏹", "🎣", "🚣", "🏊", "🏄", "🛀", "⛹", "🏋", "🚴", "🚵", "🏇", "🕴", "🏆", "🎽", "🏅", "🎖", "🎗", "🏵", "🎫", "🎟", "🎭", "🎨", "🎪", "🎤", "🎧", "🎼", "🎹", "🎷", "🎺", "🎸", "🎻", "🎬", "🎮", "👾", "🎯", "🎲", "🎰", "🎳", "🚗", "🚕", "🚙", "🚌", "🚎", "🏎", "🚓", "🚑", "🚒", "🚐", "🚚", "🚛", "🚜", "🏍", "🚲", "🚨", "🚔", "🚍", "🚘", "🚖", "🚡", "🚠", "🚟", "🚃", "🚋", "🚝", "🚄", "🚅", "🚈", "🚞", "🚂", "🚆", "🚇", "🚊", "🚉", "🚁", "🛩", "✈️", "🛫", "🛬", "⛵️", "🛥", "🚤", "⛴", "🛳", "🚀", "🛰", "💺", "⚓️", "🚧", "⛽️", "🚏", "🚦", "🚥", "🏁", "🚢", "🎡", "🎢", "🎠", "🏗", "🌁", "🗼", "🏭", "⛲️", "🎑", "⛰", "🏔", "🗻", "🌋", "🗾", "🏕", "⛺️", "🏞", "🛣", "🛤", "🌅", "🌄", "🏜", "🏖", "🏝", "🌇", "🌆", "🏙", "🌃", "🌉", "🌌", "🌠", "🎇", "🎆", "🌈", "🏘", "🏰", "🏯", "🏟", "🗽", "🏠", "🏡", "🏚", "🏢", "🏬", "🏣", "🏤", "🏥", "🏦", "🏨", "🏪", "🏫", "🏩", "💒", "🏛", "⛪️", "🕌", "🕍", "🕋", "⛩", "⌚️", "📱", "📲", "💻", "⌨", "🖥", "🖨", "🖱", "🖲", "🕹", "🗜", "💽", "💾", "💿", "📀", "📼", "📷", "📸", "📹", "🎥", "📽", "🎞", "📞", "☎️", "📟", "📠", "📺", "📻", "🎙", "🎚", "🎛", "⏱", "⏲", "⏰", "🕰", "⏳", "⌛️", "📡", "🔋", "🔌", "💡", "🔦", "🕯", "🗑", "🛢", "💸", "💵", "💴", "💶", "💷", "💰", "💳", "💎", "⚖", "🔧", "🔨", "⚒", "🛠", "⛏", "🔩", "⚙", "⛓", "🔫", "💣", "🔪", "🗡", "⚔", "🛡", "🚬", "☠", "⚰", "⚱", "🏺", "🔮", "📿", "💈", "⚗", "🔭", "🔬", "🕳", "💊", "💉", "🌡", "🏷", "🔖", "🚽", "🚿", "🛁", "🔑", "🗝", "🛋", "🛌", "🛏", "🚪", "🛎", "🖼", "🗺", "⛱", "🗿", "🛍", "🎈", "🎏", "🎀", "🎁", "🎊", "🎉", "🎎", "🎐", "🎌", "🏮", "✉️", "📩", "📨", "📧", "💌", "📮", "📪", "📫", "📬", "📭", "📦", "📯", "📥", "📤", "📜", "📃", "📑", "📊", "📈", "📉", "📄", "📅", "📆", "🗓", "📇", "🗃", "🗳", "🗄", "📋", "🗒", "📁", "📂", "🗂", "🗞", "📰", "📓", "📕", "📗", "📘", "📙", "📔", "📒", "📚", "📖", "🔗", "📎", "🖇", "✂️", "📐", "📏", "📌", "📍", "🚩", "🏳", "🏴", "🔐", "🔒", "🔓", "🔏", "🖊", "🖊", "🖋", "✒️", "📝", "✏️", "🖍", "🖌", "🔍", "🔎", "❤️", "💛", "💙", "💜", "💔", "❣️", "💕", "💞", "💓", "💗", "💖", "💘", "💝", "💟", "☮", "✝️", "☪", "🕉", "☸", "✡️", "🔯", "🕎", "☯️", "☦", "🛐", "⛎", "♈️", "♉️", "♊️", "♋️", "♌️", "♍️", "♎️", "♏️", "♐️", "♑️", "♒️", "♓️", "🆔", "⚛", "🈳", "🈹", "☢", "☣", "📴", "📳", "🈶", "🈚️", "🈸", "🈺", "🈷️", "✴️", "🆚", "🉑", "💮", "🉐", "㊙️", "㊗️", "🈴", "🈵", "🈲", "🅰️", "🅱️", "🆎", "🆑", "🅾️", "🆘", "⛔️", "📛", "🚫", "❌", "⭕️", "💢", "♨️", "🚷", "🚯", "🚳", "🚱", "🔞", "📵", "❗️", "❕", "❓", "❔", "‼️", "⁉️", "💯", "🔅", "🔆", "🔱", "⚜", "〽️", "⚠️", "🚸", "🔰", "♻️", "🈯️", "💹", "❇️", "✳️", "❎", "✅", "💠", "🌀", "➿", "🌐", "Ⓜ️", "🏧", "🈂️", "🛂", "🛃", "🛄", "🛅", "♿️", "🚭", "🚾", "🅿️", "🚰", "🚹", "🚺", "🚼", "🚻", "🚮", "🎦", "📶", "🈁", "🆖", "🆗", "🆙", "🆒", "🆕", "🆓", "0️⃣", "1️⃣", "2️⃣", "3️⃣", "4️⃣", "5️⃣", "6️⃣", "7️⃣", "8️⃣", "9️⃣", "🔟", "🔢", "▶️", "⏸", "⏯", "⏹", "⏺", "⏭", "⏮", "⏩", "⏪", "🔀", "🔁", "🔂", "◀️", "🔼", "🔽", "⏫", "⏬", "➡️", "⬅️", "⬆️", "⬇️", "↗️", "↘️", "↙️", "↖️", "↕️", "↔️", "🔄", "↪️", "↩️", "⤴️", "⤵️", "#️⃣", "*️⃣", "ℹ️", "🔤", "🔡", "🔠", "🔣", "🎵", "🎶", "〰️", "➰", "✔️", "🔃", "➕", "➖", "➗", "✖️", "💲", "💱", "©️", "®️", "™️", "🔚", "🔙", "🔛", "🔝", "🔜", "☑️", "🔘", "⚪️", "⚫️", "🔴", "🔵", "🔸", "🔹", "🔶", "🔷", "🔺", "▪️", "▫️", "⬛️", "⬜️", "🔻", "◼️", "◻️", "◾️", "◽️", "🔲", "🔳", "🔈", "🔉", "🔊", "🔇", "📣", "📢", "🔔", "🔕", "🃏", "🀄️", "♠️", "♣️", "♥️", "♦️", "🎴", "👁‍🗨", "💭", "🗯", "💬", "🕐", "🕑", "🕒", "🕓", "🕔", "🕕", "🕖", "🕗", "🕘", "🕙", "🕚", "🕛", "🕜", "🕝", "🕞", "🕟", "🕠", "🕡", "🕢", "🕣", "🕤", "🕥", "🕦", "🕧", "🇦🇫", "🇦🇽", "🇦🇱", "🇩🇿", "🇦🇸", "🇦🇩", "🇦🇴", "🇦🇮", "🇦🇶", "🇦🇬", "🇦🇷", "🇦🇲", "🇦🇼", "🇦🇺", "🇦🇹", "🇦🇿", "🇧🇸", "🇧🇭", "🇧🇩", "🇧🇧", "🇧🇾", "🇧🇪", "🇧🇿", "🇧🇯", "🇧🇲", "🇧🇹", "🇧🇴", "🇧🇶", "🇧🇦", "🇧🇼", "🇧🇷", "🇮🇴", "🇻🇬", "🇧🇳", "🇧🇬", "🇧🇫", "🇧🇮", "🇨🇻", "🇰🇭", "🇨🇲", "🇨🇦", "🇮🇨", "🇰🇾", "🇨🇫", "🇹🇩", "🇨🇱", "🇨🇳", "🇨🇽", "🇨🇨", "🇨🇴", "🇰🇲", "🇨🇬", "🇨🇩", "🇨🇰", "🇨🇷", "🇭🇷", "🇨🇺", "🇨🇼", "🇨🇾", "🇨🇿", "🇩🇰", "🇩🇯", "🇩🇲", "🇩🇴", "🇪🇨", "🇪🇬", "🇸🇻", "🇬🇶", "🇪🇷", "🇪🇪", "🇪🇹", "🇪🇺", "🇫🇰", "🇫🇴", "🇫🇯", "🇫🇮", "🇫🇷", "🇬🇫", "🇵🇫", "🇹🇫", "🇬🇦", "🇬🇲", "🇬🇪", "🇩🇪", "🇬🇭", "🇬🇮", "🇬🇷", "🇬🇱", "🇬🇩", "🇬🇵", "🇬🇺", "🇬🇹", "🇬🇬", "🇬🇳", "🇬🇼", "🇬🇾", "🇭🇹", "🇭🇳", "🇭🇰", "🇭🇺", "🇮🇸", "🇮🇳", "🇮🇩", "🇮🇷", "🇮🇶", "🇮🇪", "🇮🇲", "🇮🇱", "🇮🇹", "🇨🇮", "🇯🇲", "🇯🇵", "🇯🇪", "🇯🇴", "🇰🇿", "🇰🇪", "🇰🇮", "🇽🇰", "🇰🇼", "🇰🇬", "🇱🇦", "🇱🇻", "🇱🇧", "🇱🇸", "🇱🇷", "🇱🇾", "🇱🇮", "🇱🇹", "🇱🇺", "🇲🇴", "🇲🇰", "🇲🇬", "🇲🇼", "🇲🇾", "🇲🇻", "🇲🇱", "🇲🇹", "🇲🇭", "🇲🇶", "🇲🇷", "🇲🇺", "🇾🇹", "🇲🇽", "🇫🇲", "🇲🇩", "🇲🇨", "🇲🇳", "🇲🇪", "🇲🇸", "🇲🇦", "🇲🇿", "🇲🇲", "🇳🇦", "🇳🇷", "🇳🇵", "🇳🇱", "🇳🇨", "🇳🇿", "🇳🇮", "🇳🇪", "🇳🇬", "🇳🇺", "🇳🇫", "🇲🇵", "🇰🇵", "🇳🇴", "🇴🇲", "🇵🇰", "🇵🇼", "🇵🇸", "🇵🇦", "🇵🇬", "🇵🇾", "🇵🇪", "🇵🇭", "🇵🇳", "🇵🇱", "🇵🇹", "🇵🇷", "🇶🇦", "🇷🇪", "🇷🇴", "🇷🇺", "🇷🇼", "🇧🇱", "🇸🇭", "🇰🇳", "🇱🇨", "🇵🇲", "🇻🇨", "🇼🇸", "🇸🇲", "🇸🇹", "🇸🇦", "🇸🇳", "🇷🇸", "🇸🇨", "🇸🇱", "🇸🇬", "🇸🇽", "🇸🇰", "🇸🇮", "🇸🇧", "🇸🇴", "🇿🇦", "🇬🇸", "🇰🇷", "🇸🇸", "🇪🇸", "🇱🇰", "🇸🇩", "🇸🇷", "🇸🇿", "🇸🇪", "🇨🇭", "🇸🇾", "🇹🇼", "🇹🇯", "🇹🇿", "🇹🇭", "🇹🇱", "🇹🇬", "🇹🇰", "🇹🇴", "🇹🇹", "🇹🇳", "🇹🇷", "🇹🇲", "🇹🇨", "🇹🇻", "🇺🇬", "🇺🇦", "🇦🇪", "🇬🇧", "🇺🇸", "🇻🇮", "🇺🇾", "🇺🇿", "🇻🇺", "🇻🇦", "🇻🇪", "🇻🇳", "🇼🇫", "🇪🇭", "🇾🇪", "🇿🇲", "🇿🇼"]
    
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        let s: Character = "a"
        print(s.unicodeScalarCodePoint())
        print((Character("z")).unicodeScalarCodePoint())
        print(Character(97))
        // Do any additional setup after loading the view.
    }
    
    override var representedObject: AnyObject? {
        didSet {
            // Update the view, if already loaded.
            
            
        }
    }
    
    override func viewDidAppear() {
//        saveEmojis()
    }
    var d = "a"
    
    func saveEmojis() {
        for emojiString in emojisString {
            let image = emojiString.image(80)
            let ns: NSString = "~/Documents/emojis2/\(d).png"
            image.savePNG(ns.stringByExpandingTildeInPath)
            d = next(d)
        }
    }
    
    func next(s: String) -> String {
        
        let length: Int = s.characters.count - 1
        print(length)
        var c: Character = s.characters.last!
        let myRange = Range<String.Index>(start: s.startIndex, end: s.endIndex)
        
        if(c == "i") {
            if length > 1 {
                var stt = s.substringWithRange(myRange)
                print(stt)
                var new: String = next(stt)
                print(myRange)
                print(s)
                print(new)
                new = new + "a"
                return new
            }
            else {
                return "aa"
            }
            
        }
        var newC = c
        if  c == "a" {
            return s.substringWithRange(myRange) + "b"
        }
        if c == "b" {
            return s.substringWithRange(myRange) + "c"
            
        }
        if c == "c" {
        return s.substringWithRange(myRange) + "d"
        }
        if c == "d" {
            return s.substringWithRange(myRange) + "e"
        }
        if c == "e" {
            return s.substringWithRange(myRange) + "f"
        }
        if c == "f" {
            return s.substringWithRange(myRange) + "g"
        }
        if c == "g" {
            return s.substringWithRange(myRange) + "h"
        }
        return s.substringWithRange(myRange) + "i"

        

        
        
    }
    
}

extension String {
    func image(mySize: CGFloat) -> NSImage {
        let size = CGSize(width: mySize, height: mySize)
        let image = NSImage(size: size)
        
        let rep = NSBitmapImageRep.init(bitmapDataPlanes: nil, pixelsWide: Int(size.width), pixelsHigh: Int(size.height), bitsPerSample: 16, samplesPerPixel: 4, hasAlpha: true, isPlanar: false, colorSpaceName: NSCalibratedRGBColorSpace, bytesPerRow: 0, bitsPerPixel: 0)
        
        image.addRepresentation(rep!)
        image.lockFocus()
        
        NSColor.clearColor().set()
        let rect = NSMakeRect(0, 4, size.width, size.height)
        let ctx = NSGraphicsContext.currentContext()?.CGContext
        CGContextClearRect(ctx, rect)
        CGContextSetFillColorWithColor(ctx, NSColor.clearColor().CGColor)
        CGContextFillRect(ctx, rect)
        (self as NSString).drawInRect(rect, withAttributes: [NSFontAttributeName: NSFont.systemFontOfSize(mySize)])
        
        image.unlockFocus()
        
        return image
    }
    
    
    
    
}


extension NSImage {
    var imagePNGRepresentation: NSData {
        return NSBitmapImageRep(data: TIFFRepresentation!)!.representationUsingType(.NSPNGFileType, properties: [:])!
    }
    func savePNG(path:String) -> Bool {
        return imagePNGRepresentation.writeToFile(path, atomically: true)
    }
}


extension Character
{
    func unicodeScalarCodePoint() -> UInt32
    {
        let characterString = String(self)
        let scalars = characterString.unicodeScalars
        
        return scalars[scalars.startIndex].value
    }
}